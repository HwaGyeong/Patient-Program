
package project;




public class PatientDemographics extends javax.swing.JFrame {
    String selection="";
    Boolean edit_check=false;
    public PatientDemographics(String selectedRow) {
        selection=selectedRow;
        initComponents();
        System.out.println(selectedRow+" row got it");
        //find row and set each data
        Database db= new Database();
        Patient p= db.findPatient(selectedRow);
        patientID.setText(Integer.toString(p.getPatientID()));
        lastname.setText(p.getLastName());
        p_lastname.setText(p.getPrevLastname());
        firstname.setText(p.getFirstName());
        home_address1.setText(p.getHomeAddress1());
        home_address2.setText(p.getHomeAddress2());
        home_city.setText(p.getHomeCity());
        state.setText(p.getHomeState());
        home_zip.setText(p.getHomeZip());
        country.setText(p.getCountry());
        citizenship.setText(p.getCityzenship());
        home_phone.setText(p.getHomePhone());
        emergency_phone.setText(p.getEmergencyPhone());
        email.setText(p.getEmail());
        ssn.setText(p.getPtss());
        dob.setText(p.getDob());
        gender.setText(p.getGender());
        ethnic_association.setText(p.getEthnicAssociation());
        martial_status.setText(p.getMartialStatus());
        current_primary_hcpid.setText(p.getCurrentPrimaryHCPId());
        active.setText(Integer.toString(p.getActive()));
        comments.setText(p.getComments());
        subscriber_realtionship.setText(p.getSubscriberRelationship());
        nok.setText(p.getNextOfKin());
        middle_initial.setText(p.getMiddleInitial());
        nok_realtionship_to_patient.setText(p.getNextOfKinRelationshipToPatient());
        
        setVisible(true);
    }

    public PatientDemographics() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dob = new javax.swing.JTextField();
        home_zip = new javax.swing.JTextField();
        home_address1L = new javax.swing.JLabel();
        gender = new javax.swing.JTextField();
        home_cityL = new javax.swing.JLabel();
        patientIDL = new javax.swing.JLabel();
        stateL = new javax.swing.JLabel();
        lastnameL = new javax.swing.JLabel();
        zipcodeL = new javax.swing.JLabel();
        lastname = new javax.swing.JTextField();
        Save = new javax.swing.JButton();
        New = new javax.swing.JButton();
        firstnameL = new javax.swing.JLabel();
        patientID = new javax.swing.JTextField();
        dobL = new javax.swing.JLabel();
        home_address1 = new javax.swing.JTextField();
        genderL = new javax.swing.JLabel();
        state = new javax.swing.JTextField();
        firstname = new javax.swing.JTextField();
        home_city = new javax.swing.JTextField();
        p_lastnameL = new javax.swing.JLabel();
        p_lastname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        home_address2L = new javax.swing.JLabel();
        home_address2 = new javax.swing.JTextField();
        countryL = new javax.swing.JLabel();
        country = new javax.swing.JTextField();
        citizenshipL = new javax.swing.JLabel();
        citizenship = new javax.swing.JTextField();
        home_phoneL = new javax.swing.JLabel();
        home_phone = new javax.swing.JFormattedTextField();
        emergency_phoneL = new javax.swing.JLabel();
        emergency_phone = new javax.swing.JFormattedTextField();
        emailL = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        ssnL = new javax.swing.JLabel();
        ssn = new javax.swing.JTextField();
        ethnic_associationL = new javax.swing.JLabel();
        ethnic_association = new javax.swing.JTextField();
        martial_statusL = new javax.swing.JLabel();
        martial_status = new javax.swing.JTextField();
        current_primary_hcpidL = new javax.swing.JLabel();
        current_primary_hcpid = new javax.swing.JTextField();
        activeL = new javax.swing.JLabel();
        active = new javax.swing.JTextField();
        comments = new javax.swing.JTextField();
        commentsL = new javax.swing.JLabel();
        middle_initialL = new javax.swing.JLabel();
        middle_initial = new javax.swing.JTextField();
        nok_realtionship_to_patient = new javax.swing.JTextField();
        nok_realtionship_to_patientL = new javax.swing.JLabel();
        subscriber_realtionshipL = new javax.swing.JLabel();
        nokL = new javax.swing.JLabel();
        subscriber_realtionship = new javax.swing.JTextField();
        nok = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        close = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        interview = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Patient Program");
        setPreferredSize(new java.awt.Dimension(602, 489));
        setSize(new java.awt.Dimension(602, 489));

        dob.setEnabled(false);
        dob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobActionPerformed(evt);
            }
        });

        home_zip.setEnabled(false);
        home_zip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_zipActionPerformed(evt);
            }
        });

        home_address1L.setText("Home Address1");

        gender.setEnabled(false);
        gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderActionPerformed(evt);
            }
        });

        home_cityL.setText("Home City");

        patientIDL.setText("Patient ID");

        stateL.setText("State/Province/Region");

        lastnameL.setText("LastName");

        zipcodeL.setText("Zipcode");

        lastname.setEnabled(false);
        lastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastnameActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        Save.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                SavePropertyChange(evt);
            }
        });
        Save.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SaveKeyPressed(evt);
            }
        });

        New.setText("New");
        New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewActionPerformed(evt);
            }
        });

        firstnameL.setText("FirstName");

        patientID.setEditable(false);
        patientID.setEnabled(false);
        patientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientIDActionPerformed(evt);
            }
        });

        dobL.setText("Date of Birth");

        home_address1.setEnabled(false);
        home_address1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_address1ActionPerformed(evt);
            }
        });

        genderL.setText("Gender");

        state.setEnabled(false);
        state.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateActionPerformed(evt);
            }
        });

        firstname.setEnabled(false);
        firstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstnameActionPerformed(evt);
            }
        });

        home_city.setEnabled(false);
        home_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_cityActionPerformed(evt);
            }
        });

        p_lastnameL.setText("Previous LastName");

        p_lastname.setEnabled(false);
        p_lastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_lastnameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("굴림", 1, 14)); // NOI18N
        jLabel1.setText("Patient Demographics");

        home_address2L.setText("Home Address2");

        home_address2.setEnabled(false);
        home_address2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_address2ActionPerformed(evt);
            }
        });

        countryL.setText("Country");

        country.setEnabled(false);
        country.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryActionPerformed(evt);
            }
        });

        citizenshipL.setText("Citizenship");

        citizenship.setEnabled(false);
        citizenship.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                citizenshipActionPerformed(evt);
            }
        });

        home_phoneL.setText("Home Phone#");

        try {
            home_phone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        home_phone.setEnabled(false);

        emergency_phoneL.setText("Emergency Phone#");

        try {
            emergency_phone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        emergency_phone.setEnabled(false);

        emailL.setText("E-mail Address");

        email.setEnabled(false);
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        ssnL.setText("SSN #");

        ssn.setEnabled(false);
        ssn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnActionPerformed(evt);
            }
        });

        ethnic_associationL.setText("Ethnic Association");

        ethnic_association.setEnabled(false);
        ethnic_association.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ethnic_associationActionPerformed(evt);
            }
        });

        martial_statusL.setText("Martial Status");

        martial_status.setEnabled(false);
        martial_status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                martial_statusActionPerformed(evt);
            }
        });

        current_primary_hcpidL.setText("Current Primary HCPId");

        current_primary_hcpid.setEnabled(false);
        current_primary_hcpid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                current_primary_hcpidActionPerformed(evt);
            }
        });

        activeL.setText("Active");

        active.setEnabled(false);
        active.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeActionPerformed(evt);
            }
        });

        comments.setEnabled(false);
        comments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentsActionPerformed(evt);
            }
        });

        commentsL.setText("Comments");

        middle_initialL.setText("Middle Initial");

        middle_initial.setEnabled(false);
        middle_initial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                middle_initialActionPerformed(evt);
            }
        });

        nok_realtionship_to_patient.setEnabled(false);
        nok_realtionship_to_patient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nok_realtionship_to_patientActionPerformed(evt);
            }
        });

        nok_realtionship_to_patientL.setText("Next of Kin Relationship To Patient");

        subscriber_realtionshipL.setText("Subscriber Realtionship");

        nokL.setText("Next of Kin");

        subscriber_realtionship.setEnabled(false);
        subscriber_realtionship.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subscriber_realtionshipActionPerformed(evt);
            }
        });

        nok.setEnabled(false);
        nok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nokActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        delete.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                deletePropertyChange(evt);
            }
        });
        delete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deleteKeyPressed(evt);
            }
        });

        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        close.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                closePropertyChange(evt);
            }
        });
        close.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                closeKeyPressed(evt);
            }
        });

        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        edit.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                editPropertyChange(evt);
            }
        });
        edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                editKeyPressed(evt);
            }
        });

        interview.setText("interview");
        interview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interviewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(156, 156, 156)
                        .addComponent(interview))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(patientIDL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(home_address1L)
                        .addGap(62, 62, 62)
                        .addComponent(home_address1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lastnameL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(home_address2L, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(home_address2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(firstnameL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(home_cityL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(home_city, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(p_lastnameL, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(p_lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(stateL, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(citizenshipL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(citizenship, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(zipcodeL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(home_zip, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(home_phoneL, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(home_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(countryL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(emergency_phoneL, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(emergency_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(ethnic_associationL, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(ethnic_association, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(emailL, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(martial_statusL, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(martial_status, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(ssnL, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(ssn, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(current_primary_hcpidL, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(current_primary_hcpid, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(dobL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(activeL, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(active, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(genderL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(commentsL, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comments, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(middle_initialL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(middle_initial, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(subscriber_realtionshipL, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(subscriber_realtionship, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(nokL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(nok, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nok_realtionship_to_patientL, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nok_realtionship_to_patient, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(New, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1))
                    .addComponent(interview))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home_address1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patientIDL)
                            .addComponent(home_address1L))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home_address2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastnameL)
                            .addComponent(home_address2L))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstnameL)
                            .addComponent(home_cityL))))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p_lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(p_lastnameL)
                            .addComponent(stateL))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(citizenship, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home_zip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(citizenshipL)
                            .addComponent(zipcodeL))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(home_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(home_phoneL)
                            .addComponent(countryL))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emergency_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ethnic_association, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emergency_phoneL)
                            .addComponent(ethnic_associationL))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(martial_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailL)
                            .addComponent(martial_statusL))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ssn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(current_primary_hcpid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ssnL)
                            .addComponent(current_primary_hcpidL))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(active, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dobL)
                            .addComponent(activeL))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(genderL, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(commentsL))
                    .addComponent(comments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(middle_initial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subscriber_realtionship, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(middle_initialL, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subscriber_realtionshipL, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(nokL, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nok_realtionship_to_patientL, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nok_realtionship_to_patient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(close)
                            .addComponent(delete)
                            .addComponent(Save)
                            .addComponent(New)
                            .addComponent(edit))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dobActionPerformed

    private void home_zipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_zipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_home_zipActionPerformed

    private void genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderActionPerformed

    private void lastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastnameActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        Patient p =new Patient();
        if(evt.getSource()==Save) {
            Database db =new Database();
            
            p.setLastName(lastname.getText());
            p.setPrevLastname(p_lastname.getText());
            p.setFirstName(firstname.getText());
            p.setHomeAddress1(home_address1.getText());
            p.setHomeAddress2(home_address2.getText());
            p.setHomeCity(home_city.getText());
            p.setHomeState(state.getText());
            p.setHomeZip(home_zip.getText());
            p.setCountry(country.getText());
            p.setCityzenship(citizenship.getText());
            p.setHomePhone(home_phone.getText());
            p.setEmergencyPhone(emergency_phone.getText());
            p.setEmail(email.getText());
            p.setPtss(ssn.getText());
            if(!"".equals(dob.getText()))
                p.setDob(dob.getText());
            else
                p.setDob("0000-00-00 00:00:00");
            p.setGender(gender.getText());
            p.setEthnicAssociation(ethnic_association.getText());
            p.setMartialStatus(martial_status.getText());
            p.setCurrentPrimaryHCPId(current_primary_hcpid.getText());
            if(!"".equals(active.getText()))
                p.setActive(Integer.valueOf(active.getText()));
            else
                p.setActive(1);
            p.setComments(comments.getText());
            p.setSubscriberRelationship(subscriber_realtionship.getText());
            p.setNextOfKin(nok.getText());
            p.setMiddleInitial(middle_initial.getText());
            p.setNextOfKinRelationshipToPatient(nok_realtionship_to_patient.getText());  
            
            int ID=0;
            if(edit_check==true){
                p.setPatientID(Integer.valueOf(patientID.getText()));
                db.updatePatient(p);
                edit_check=false;
            }             
            else
                ID=db.insertPatient(p);
            
            //find a row to show the result 
            Patient t= db.findPatient(Integer.toString(ID));
            
            patientID.setText(Integer.toString(t.getPatientID()));
            lastname.setText(t.getLastName());
            p_lastname.setText(t.getPrevLastname());
            firstname.setText(p.getFirstName());
            home_address1.setText(p.getHomeAddress1());
            home_address2.setText(p.getHomeAddress2());
            home_city.setText(p.getHomeCity());
            state.setText(p.getHomeState());
            home_zip.setText(p.getHomeZip());
            country.setText(p.getCountry());
            citizenship.setText(p.getCityzenship());
            home_phone.setText(p.getHomePhone());
            emergency_phone.setText(p.getEmergencyPhone());
            email.setText(p.getEmail());
            ssn.setText(p.getPtss());
            dob.setText(p.getDob());
            gender.setText(p.getGender());
            ethnic_association.setText(p.getEthnicAssociation());
            martial_status.setText(p.getMartialStatus());
            current_primary_hcpid.setText(p.getCurrentPrimaryHCPId());
            active.setText(Integer.toString(p.getActive()));
            comments.setText(p.getComments());
            subscriber_realtionship.setText(p.getSubscriberRelationship());
            nok.setText(p.getNextOfKin());
            middle_initial.setText(p.getMiddleInitial());
            nok_realtionship_to_patient.setText(p.getNextOfKinRelationshipToPatient());

            //turn to gray background and lock
            lastname.setEnabled(false);
            p_lastname.setEnabled(false);
            firstname.setEnabled(false);
            home_address1.setEnabled(false);
            home_address2.setEnabled(false);
            home_city.setEnabled(false);
            state.setEnabled(false);
            home_zip.setEnabled(false);
            country.setEnabled(false);
            citizenship.setEnabled(false);
            home_phone.setEnabled(false);
            emergency_phone.setEnabled(false);
            email.setEnabled(false);
            ssn.setEnabled(false);
            dob.setEnabled(false);
            gender.setEnabled(false);
            ethnic_association.setEnabled(false);
            martial_status.setEnabled(false);
            current_primary_hcpid.setEnabled(false);
            active.setEnabled(false);
            comments.setEnabled(false);
            subscriber_realtionship.setEnabled(false);
            nok.setEnabled(false);
            middle_initial.setEnabled(false);
            nok_realtionship_to_patient.setEnabled(false);
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void SavePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_SavePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_SavePropertyChange

    private void SaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SaveKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveKeyPressed

    private void NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewActionPerformed
      if(evt.getSource()==New){
            patientID.setText("autogenerated");
            lastname.setText("");
            p_lastname.setText("");
            firstname.setText("");
            home_address1.setText("");
            home_address2.setText("");
            home_city.setText("");
            state.setText("");
            home_zip.setText("");
            country.setText("");
            citizenship.setText("");
            home_phone.setText("");
            emergency_phone.setText("");
            email.setText("");
            ssn.setText("");
            dob.setText("");
            gender.setText("");
            ethnic_association.setText("");
            martial_status.setText("");
            current_primary_hcpid.setText("");
            active.setText("");
            comments.setText("");
            subscriber_realtionship.setText("");
            nok.setText("");
            middle_initial.setText("");
            nok_realtionship_to_patient.setText("");
          
            //patientID.setEnabled(true);
            lastname.setEnabled(true);
            p_lastname.setEnabled(true);
            firstname.setEnabled(true);
            home_address1.setEnabled(true);
            home_address2.setEnabled(true);
            home_city.setEnabled(true);
            state.setEnabled(true);
            home_zip.setEnabled(true);
            country.setEnabled(true);
            citizenship.setEnabled(true);
            home_phone.setEnabled(true);
            emergency_phone.setEnabled(true);
            email.setEnabled(true);
            ssn.setEnabled(true);
            dob.setEnabled(true);
            gender.setEnabled(true);
            ethnic_association.setEnabled(true);
            martial_status.setEnabled(true);
            current_primary_hcpid.setEnabled(true);
            active.setEnabled(true);
            comments.setEnabled(true);
            subscriber_realtionship.setEnabled(true);
            nok.setEnabled(true);
            middle_initial.setEnabled(true);
            nok_realtionship_to_patient.setEnabled(true);
        }
    }//GEN-LAST:event_NewActionPerformed

    private void patientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientIDActionPerformed

    private void home_address1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_address1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_home_address1ActionPerformed

    private void stateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateActionPerformed

    private void firstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstnameActionPerformed

    private void home_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_cityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_home_cityActionPerformed

    private void p_lastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_lastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_lastnameActionPerformed

    private void home_address2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_address2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_home_address2ActionPerformed

    private void countryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countryActionPerformed

    private void citizenshipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_citizenshipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_citizenshipActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void ssnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ssnActionPerformed

    private void ethnic_associationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ethnic_associationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ethnic_associationActionPerformed

    private void martial_statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_martial_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_martial_statusActionPerformed

    private void current_primary_hcpidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_current_primary_hcpidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_current_primary_hcpidActionPerformed

    private void activeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activeActionPerformed

    private void commentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commentsActionPerformed

    private void middle_initialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_middle_initialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_middle_initialActionPerformed

    private void nok_realtionship_to_patientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nok_realtionship_to_patientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nok_realtionship_to_patientActionPerformed

    private void subscriber_realtionshipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subscriber_realtionshipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subscriber_realtionshipActionPerformed

    private void nokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nokActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nokActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if(evt.getSource()==delete){          
            Database db= new Database();
            db.deletePatient(selection);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void deletePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_deletePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_deletePropertyChange

    private void deleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteKeyPressed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        if(evt.getSource()==close){
            new PatientSelection();
            setVisible(false);
        }  
    }//GEN-LAST:event_closeActionPerformed

    private void closePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_closePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_closePropertyChange

    private void closeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_closeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_closeKeyPressed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
          if(evt.getSource()==edit){
            edit_check=true;  
            //patientID.setEnabled(true);
            lastname.setEnabled(true);
            p_lastname.setEnabled(true);
            firstname.setEnabled(true);
            home_address1.setEnabled(true);
            home_address2.setEnabled(true);
            home_city.setEnabled(true);
            state.setEnabled(true);
            home_zip.setEnabled(true);
            country.setEnabled(true);
            citizenship.setEnabled(true);
            home_phone.setEnabled(true);
            emergency_phone.setEnabled(true);
            email.setEnabled(true);
            ssn.setEnabled(true);
            dob.setEnabled(true);
            gender.setEnabled(true);
            ethnic_association.setEnabled(true);
            martial_status.setEnabled(true);
            current_primary_hcpid.setEnabled(true);
            active.setEnabled(true);
            comments.setEnabled(true);
            subscriber_realtionship.setEnabled(true);
            nok.setEnabled(true);
            middle_initial.setEnabled(true);
            nok_realtionship_to_patient.setEnabled(true);
        }
    }//GEN-LAST:event_editActionPerformed

    private void editPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_editPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_editPropertyChange

    private void editKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_editKeyPressed

    private void interviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interviewActionPerformed
        if(evt.getSource()==interview){
            new GeneralMedicalPage(selection);
            setVisible(false); 
        }
    }//GEN-LAST:event_interviewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientDemographics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientDemographics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientDemographics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientDemographics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientDemographics().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton New;
    private javax.swing.JButton Save;
    private javax.swing.JTextField active;
    private javax.swing.JLabel activeL;
    private javax.swing.JTextField citizenship;
    private javax.swing.JLabel citizenshipL;
    private javax.swing.JButton close;
    private javax.swing.JTextField comments;
    private javax.swing.JLabel commentsL;
    private javax.swing.JTextField country;
    private javax.swing.JLabel countryL;
    private javax.swing.JTextField current_primary_hcpid;
    private javax.swing.JLabel current_primary_hcpidL;
    private javax.swing.JButton delete;
    private javax.swing.JTextField dob;
    private javax.swing.JLabel dobL;
    private javax.swing.JButton edit;
    private javax.swing.JTextField email;
    private javax.swing.JLabel emailL;
    private javax.swing.JFormattedTextField emergency_phone;
    private javax.swing.JLabel emergency_phoneL;
    private javax.swing.JTextField ethnic_association;
    private javax.swing.JLabel ethnic_associationL;
    private javax.swing.JTextField firstname;
    private javax.swing.JLabel firstnameL;
    private javax.swing.JTextField gender;
    private javax.swing.JLabel genderL;
    private javax.swing.JTextField home_address1;
    private javax.swing.JLabel home_address1L;
    private javax.swing.JTextField home_address2;
    private javax.swing.JLabel home_address2L;
    private javax.swing.JTextField home_city;
    private javax.swing.JLabel home_cityL;
    private javax.swing.JFormattedTextField home_phone;
    private javax.swing.JLabel home_phoneL;
    private javax.swing.JTextField home_zip;
    private javax.swing.JButton interview;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField lastname;
    private javax.swing.JLabel lastnameL;
    private javax.swing.JTextField martial_status;
    private javax.swing.JLabel martial_statusL;
    private javax.swing.JTextField middle_initial;
    private javax.swing.JLabel middle_initialL;
    private javax.swing.JTextField nok;
    private javax.swing.JLabel nokL;
    private javax.swing.JTextField nok_realtionship_to_patient;
    private javax.swing.JLabel nok_realtionship_to_patientL;
    private javax.swing.JTextField p_lastname;
    private javax.swing.JLabel p_lastnameL;
    private javax.swing.JTextField patientID;
    private javax.swing.JLabel patientIDL;
    private javax.swing.JTextField ssn;
    private javax.swing.JLabel ssnL;
    private javax.swing.JTextField state;
    private javax.swing.JLabel stateL;
    private javax.swing.JTextField subscriber_realtionship;
    private javax.swing.JLabel subscriber_realtionshipL;
    private javax.swing.JLabel zipcodeL;
    // End of variables declaration//GEN-END:variables
}
