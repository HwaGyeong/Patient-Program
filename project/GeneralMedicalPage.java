/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package project;

/**
 *
 * @author LG
 */
public class GeneralMedicalPage extends javax.swing.JFrame {

        Tree General = new Tree();
        Tree Alcohol = new Tree();
        Tree Smoking = new Tree();
        Tree Drug = new Tree();
        Tree Marriage = new Tree();
             
        Node currentNode;
        
    /**
     * Creates new form GeneralMedicalPage
     */
    public GeneralMedicalPage() {
        initComponents();
        //create binary tree for interviews
        
        //blood type
        General.createRoot(1, "Is your blood type A? ");
        General.addYesNode(1,5,"Is your blood type RH+? ");
        General.addYesNode(5,9,"Please click submit again, please fill other categories");//it means RH+
        General.addNoNode(5,10,"Please click submit again, please fill other categories");//it means RH-
        General.addNoNode(1,2,"Is your blood type B? ");    
        General.addYesNode(2,6,"Is your blood type RH+? ");
        General.addYesNode(6,11,"Please click submit again, please fill other categories");//it means RH+
        General.addNoNode(6,12,"Please click submit again, please fill other categories");//it means RH-
        General.addNoNode(2,3,"Is your blood type O? ");
        General.addYesNode(3,7,"Is your blood type RH+? ");
        General.addYesNode(7,13,"Please click submit again, please fill other categories");//it means RH+
        General.addNoNode(7,14,"Please click submit again, please fill other categories");//it means RH-
        General.addNoNode(3,4,"Is your blood type AB? ");
        General.addYesNode(4,8,"Is your blood type RH+? ");
        General.addYesNode(8,15,"Please click submit again, please fill other categories");//it means RH+
        General.addNoNode(8,16,"Please click submit again, please fill other categories");//it means RH-

        
        //about alcohol
        Alcohol .createRoot(1, "Do you drink alcohol? (e.g. yes or no) ");
        Alcohol .addYesNode(1,2,"What kind of alcohol do you drink? ");//type
        Alcohol .addYesNode(2,3,"How often do you drink? ");//duration
        Alcohol .addYesNode(3,4,"How much alcohol do you drink?");//quantity
        Alcohol .addNoNode(1,5,"Please click submit again, please fill other categories");
//        //about smoke
        Smoking.createRoot(1, "Do you smoke? (e.g. yes or no) ");
        Smoking.addYesNode(1,2,"What kind of things do you smoke? ");
        Smoking.addYesNode(2,3,"How often do you smoke? ");
        Smoking.addYesNode(3,4,"How many cigarettes do you smoke?");
        Smoking.addNoNode(1,5,"Please click submit again, please fill other categories");
//        //about drug
        Drug.createRoot(1,"Do you use drug? (e.g. yes or no) ");
        Drug.addYesNode(1,2,"What kind of things do you use? ");
        Drug.addYesNode(2,3,"How often do you use? ");
        Drug.addNoNode(1,4, "Please click submit again, please fill other categories");
        
        Marriage.createRoot(1,"Did you get married? (e.g. yes or no) ");
        Marriage.addYesNode(1,2, "Please click submit again, please fill other categories");
        Marriage.addNoNode(1,3, "Please click submit again, please fill other categories");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        Save = new javax.swing.JButton();
        New = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        close = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        questions = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        answers = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        start = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        bloodType = new javax.swing.JTextField();
        rh = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        maritalStatus = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        typeA = new javax.swing.JTextField();
        durationA = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tobacco = new javax.swing.JTextField();
        typeT = new javax.swing.JTextField();
        quantityT = new javax.swing.JTextField();
        durationT = new javax.swing.JTextField();
        drug = new javax.swing.JTextField();
        typeD = new javax.swing.JTextField();
        durationD = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        quantityA = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        alcohol = new javax.swing.JTextField();
        list = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("굴림", 1, 14)); // NOI18N
        jLabel1.setText("Your Answers");

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        Save.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                SavePropertyChange(evt);
            }
        });
        Save.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SaveKeyPressed(evt);
            }
        });

        New.setText("New");
        New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        delete.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                deletePropertyChange(evt);
            }
        });
        delete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deleteKeyPressed(evt);
            }
        });

        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        close.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                closePropertyChange(evt);
            }
        });
        close.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                closeKeyPressed(evt);
            }
        });

        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        edit.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                editPropertyChange(evt);
            }
        });
        edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                editKeyPressed(evt);
            }
        });

        jLabel2.setText("Blood Type");

        jLabel3.setText("RH");

        jLabel4.setText("Question");

        questions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionsActionPerformed(evt);
            }
        });

        jLabel5.setText("Answer");

        answers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answersActionPerformed(evt);
            }
        });

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        start.setText("Start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("굴림", 1, 14)); // NOI18N
        jLabel6.setText("General Medical History Interview");

        bloodType.setEditable(false);
        bloodType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodTypeActionPerformed(evt);
            }
        });

        rh.setEditable(false);
        rh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rhActionPerformed(evt);
            }
        });

        jLabel7.setText("Marital Status");

        maritalStatus.setEditable(false);

        jLabel9.setText("Type");

        jLabel10.setText("Quantity");

        jLabel11.setText("Duration");

        typeA.setEditable(false);

        durationA.setEditable(false);

        jLabel12.setText("Tobacco");

        jLabel13.setText("Type");

        jLabel14.setText("Quantity");

        jLabel15.setText("Duration");

        tobacco.setEditable(false);

        typeT.setEditable(false);

        quantityT.setEditable(false);

        durationT.setEditable(false);

        drug.setEditable(false);

        typeD.setEditable(false);

        durationD.setEditable(false);

        jLabel16.setText("Drug");

        jLabel17.setText("Type");

        jLabel19.setText("Duration");

        quantityA.setEditable(false);

        jLabel18.setText("Alcohol");

        alcohol.setEditable(false);
        alcohol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alcoholActionPerformed(evt);
            }
        });

        list.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blood Type", "Alcohol", "Tobacco", "Drug", "Marital" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(New, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(rh, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(maritalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 3, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(durationA, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(typeA, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantityA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bloodType, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(alcohol, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(durationT, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(typeT, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(quantityT, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tobacco, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(typeD, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(durationD, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(drug, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(25, 25, 25)
                                    .addComponent(answers))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(25, 25, 25)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(questions, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start)
                    .addComponent(jLabel6)
                    .addComponent(list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(answers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel16)
                                            .addComponent(drug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel17)
                                            .addComponent(typeD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel19)
                                            .addComponent(durationD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(59, 59, 59))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(bloodType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(rh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(maritalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10))))
                                .addGap(29, 29, 29)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(close)
                            .addComponent(delete)
                            .addComponent(Save)
                            .addComponent(New)
                            .addComponent(edit)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(tobacco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alcohol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(typeT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(quantityT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantityA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(durationT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(durationA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        Patient p =new Patient();
        if(evt.getSource()==Save) {
            Database db =new Database();
//
//            p.setLastName(lastname.getText());
//            p.setPrevLastname(p_lastname.getText());
//            p.setFirstName(firstname.getText());
//            p.setHomeAddress1(home_address1.getText());
//            p.setHomeAddress2(home_address2.getText());
//            p.setHomeCity(home_city.getText());
//            p.setHomeState(state.getText());
//            p.setHomeZip(home_zip.getText());
//            p.setCountry(country.getText());
//            p.setCityzenship(citizenship.getText());
//            p.setHomePhone(home_phone.getText());
//            p.setEmergencyPhone(emergency_phone.getText());
//            p.setEmail(email.getText());
//            p.setPtss(ssn.getText());
//            if(!"".equals(dob.getText()))
//            p.setDob(dob.getText());
//            else
//            p.setDob("0000-00-00 00:00:00");
//            p.setGender(gender.getText());
//            p.setEthnicAssociation(ethnic_association.getText());
//            p.setMartialStatus(martial_status.getText());
//            p.setCurrentPrimaryHCPId(current_primary_hcpid.getText());
//            if(!"".equals(active.getText()))
//            p.setActive(Integer.valueOf(active.getText()));
//            else
//            p.setActive(1);
//            p.setComments(comments.getText());
//            p.setSubscriberRelationship(subscriber_realtionship.getText());
//            p.setNextOfKin(nok.getText());
//            p.setMiddleInitial(middle_initial.getText());
//            p.setNextOfKinRelationshipToPatient(nok_realtionship_to_patient.getText());
//
//            int ID=0;
//            if(edit_check==true){
//                p.setPatientID(Integer.valueOf(patientID.getText()));
//                db.updatePatient(p);
//                edit_check=false;
//            }
//            else
//            ID=db.insertPatient(p);
//
//            //find a row to show the result
//            Patient t= db.findPatient(Integer.toString(ID));
//
//            patientID.setText(Integer.toString(t.getPatientID()));
//            lastname.setText(t.getLastName());
//            p_lastname.setText(t.getPrevLastname());
//            firstname.setText(p.getFirstName());
//            home_address1.setText(p.getHomeAddress1());
//            home_address2.setText(p.getHomeAddress2());
//            home_city.setText(p.getHomeCity());
//            state.setText(p.getHomeState());
//            home_zip.setText(p.getHomeZip());
//            country.setText(p.getCountry());
//            citizenship.setText(p.getCityzenship());
//            home_phone.setText(p.getHomePhone());
//            emergency_phone.setText(p.getEmergencyPhone());
//            email.setText(p.getEmail());
//            ssn.setText(p.getPtss());
//            dob.setText(p.getDob());
//            gender.setText(p.getGender());
//            ethnic_association.setText(p.getEthnicAssociation());
//            martial_status.setText(p.getMartialStatus());
//            current_primary_hcpid.setText(p.getCurrentPrimaryHCPId());
//            active.setText(Integer.toString(p.getActive()));
//            comments.setText(p.getComments());
//            subscriber_realtionship.setText(p.getSubscriberRelationship());
//            nok.setText(p.getNextOfKin());
//            middle_initial.setText(p.getMiddleInitial());
//            nok_realtionship_to_patient.setText(p.getNextOfKinRelationshipToPatient());
//
//            //turn to gray background and lock
//            lastname.setEnabled(false);
//            p_lastname.setEnabled(false);
//            firstname.setEnabled(false);
//            home_address1.setEnabled(false);
//            home_address2.setEnabled(false);
//            home_city.setEnabled(false);
//            state.setEnabled(false);
//            home_zip.setEnabled(false);
//            country.setEnabled(false);
//            citizenship.setEnabled(false);
//            home_phone.setEnabled(false);
//            emergency_phone.setEnabled(false);
//            email.setEnabled(false);
//            ssn.setEnabled(false);
//            dob.setEnabled(false);
//            gender.setEnabled(false);
//            ethnic_association.setEnabled(false);
//            martial_status.setEnabled(false);
//            current_primary_hcpid.setEnabled(false);
//            active.setEnabled(false);
//            comments.setEnabled(false);
//            subscriber_realtionship.setEnabled(false);
//            nok.setEnabled(false);
//            middle_initial.setEnabled(false);
//            nok_realtionship_to_patient.setEnabled(false);
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void SavePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_SavePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_SavePropertyChange

    private void SaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SaveKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveKeyPressed

    private void NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewActionPerformed
        if(evt.getSource()==New){
//            patientID.setText("autogenerated");
//            lastname.setText("");
//            p_lastname.setText("");
//            firstname.setText("");
//            home_address1.setText("");
//            home_address2.setText("");
//            home_city.setText("");
//            state.setText("");
//            home_zip.setText("");
//            country.setText("");
//            citizenship.setText("");
//            home_phone.setText("");
//            emergency_phone.setText("");
//            email.setText("");
//            ssn.setText("");
//            dob.setText("");
//            gender.setText("");
//            ethnic_association.setText("");
//            martial_status.setText("");
//            current_primary_hcpid.setText("");
//            active.setText("");
//            comments.setText("");
//            subscriber_realtionship.setText("");
//            nok.setText("");
//            middle_initial.setText("");
//            nok_realtionship_to_patient.setText("");
//
//            //patientID.setEnabled(true);
//            lastname.setEnabled(true);
//            p_lastname.setEnabled(true);
//            firstname.setEnabled(true);
//            home_address1.setEnabled(true);
//            home_address2.setEnabled(true);
//            home_city.setEnabled(true);
//            state.setEnabled(true);
//            home_zip.setEnabled(true);
//            country.setEnabled(true);
//            citizenship.setEnabled(true);
//            home_phone.setEnabled(true);
//            emergency_phone.setEnabled(true);
//            email.setEnabled(true);
//            ssn.setEnabled(true);
//            dob.setEnabled(true);
//            gender.setEnabled(true);
//            ethnic_association.setEnabled(true);
//            martial_status.setEnabled(true);
//            current_primary_hcpid.setEnabled(true);
//            active.setEnabled(true);
//            comments.setEnabled(true);
//            subscriber_realtionship.setEnabled(true);
//            nok.setEnabled(true);
//            middle_initial.setEnabled(true);
//            nok_realtionship_to_patient.setEnabled(true);
        }
    }//GEN-LAST:event_NewActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if(evt.getSource()==delete){
            Database db= new Database();
        //    db.deletePatient(selection);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void deletePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_deletePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_deletePropertyChange

    private void deleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteKeyPressed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        if(evt.getSource()==close){
            new PatientSelection();
            setVisible(false);
        }
    }//GEN-LAST:event_closeActionPerformed

    private void closePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_closePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_closePropertyChange

    private void closeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_closeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_closeKeyPressed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        if(evt.getSource()==edit){
//            edit_check=true;
//            //patientID.setEnabled(true);
//            lastname.setEnabled(true);
//            p_lastname.setEnabled(true);
//            firstname.setEnabled(true);
//            home_address1.setEnabled(true);
//            home_address2.setEnabled(true);
//            home_city.setEnabled(true);
//            state.setEnabled(true);
//            home_zip.setEnabled(true);
//            country.setEnabled(true);
//            citizenship.setEnabled(true);
//            home_phone.setEnabled(true);
//            emergency_phone.setEnabled(true);
//            email.setEnabled(true);
//            ssn.setEnabled(true);
//            dob.setEnabled(true);
//            gender.setEnabled(true);
//            ethnic_association.setEnabled(true);
//            martial_status.setEnabled(true);
//            current_primary_hcpid.setEnabled(true);
//            active.setEnabled(true);
//            comments.setEnabled(true);
//            subscriber_realtionship.setEnabled(true);
//            nok.setEnabled(true);
//            middle_initial.setEnabled(true);
//            nok_realtionship_to_patient.setEnabled(true);
        }
    }//GEN-LAST:event_editActionPerformed

    private void editPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_editPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_editPropertyChange

    private void editKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_editKeyPressed

    private void questionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionsActionPerformed
        
    }//GEN-LAST:event_questionsActionPerformed

    private void answersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answersActionPerformed
        
    }//GEN-LAST:event_answersActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        if(evt.getSource()==submit){
            
            if(currentNode!=null){
                String answer = answers.getText();
                answer = answer.toLowerCase();
                if(answer.equals("no"))
                {
                    if(currentNode.noBranch!=null)
                        currentNode=currentNode.noBranch;
                     else{//reached leaf node
                        System.out.println("User answer: "+ answer+" and Node ID: "+currentNode.nodeID);
                        setDatas(list.getSelectedItem().toString(),currentNode.nodeID);
                        return;
                    }
                }                    
                else //say yes or others
                {
                    if(!answer.equals("yes")){//except 'yes', for saving
                       setAnswers(list.getSelectedItem().toString(),currentNode.nodeID,answer);
                    }
                    if(currentNode.yesBranch!=null)
                        currentNode=currentNode.yesBranch;
                    else{//reached leaf node
                        System.out.println("User answer: "+ answer+" and Node ID: "+currentNode.nodeID);
                        setDatas(list.getSelectedItem().toString(),currentNode.nodeID);
                        return;
                   }                        
                }
                //System.out.println("User answer: "+ answer+" and Node ID: "+currentNode.nodeID);
                if(currentNode.question!=null)
                    questions.setText(currentNode.question);
            }   
            
        }
    }//GEN-LAST:event_submitActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
         if(evt.getSource()==start){
            String category= list.getSelectedItem().toString();
            if(category.equals("Blood Type"))
                currentNode= General.getRoot();
            if(category.equals("Alcohol"))
                currentNode= Alcohol.getRoot();
            if(category.equals("Tobacco"))
                currentNode= Smoking.getRoot();
            if(category.equals("Drug"))
                currentNode= Drug.getRoot();
            if(category.equals("Marital"))
                currentNode= Marriage.getRoot();
            
            questions.setText(currentNode.question);
         }
    }//GEN-LAST:event_startActionPerformed

    private void bloodTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodTypeActionPerformed

    private void rhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rhActionPerformed

    private void alcoholActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alcoholActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alcoholActionPerformed

    private void setDatas(String category, int nodeID){//for setting simple datas
        
        if(category.equals("Blood Type"))
        {
            if(nodeID%2==1)//RH+
            {
                rh.setText("RH+");
                if(nodeID==9)
                    bloodType.setText("A");
                if(nodeID==11)
                    bloodType.setText("B");
                if(nodeID==13)
                    bloodType.setText("O");
                if(nodeID==15)
                    bloodType.setText("AB");
            }
                
            else //RH-
            {
                rh.setText("RH-");
                if(nodeID==10)
                    bloodType.setText("A");
                if(nodeID==12)
                    bloodType.setText("B");
                if(nodeID==14)
                    bloodType.setText("O");
                if(nodeID==16)
                    bloodType.setText("AB");
            }
        }
         if(category.equals("Alcohol"))
            {
                if(nodeID==5)
                    alcohol.setText("No");
          
            }
            if(category.equals("Tobacco"))
            {
                    if(nodeID==5)
                    tobacco.setText("No");
     
            }
            if(category.equals("Drug"))
            {
                if(nodeID==5)
                    drug.setText("No");          
            }
            if(category.equals("Marital"))
            {
                if(nodeID==2)
                    maritalStatus.setText("yes");
                if(nodeID==3)
                    maritalStatus.setText("no");
            }
    }
    private void setAnswers(String category,int nodeID,String answer){//for setting more specific information
            if(category.equals("Alcohol"))
            {
                    alcohol.setText("Yes");
                    if(nodeID==2)
                        typeA.setText(answer);
                    if(nodeID==3)
                        durationA.setText(answer);
                    if(nodeID==4)
                        quantityA.setText(answer);                
            }
            if(category.equals("Tobacco"))
                {
                    tobacco.setText("Yes");
                    if(nodeID==2)
                        typeT.setText(answer);
                    if(nodeID==3)
                        durationT.setText(answer);
                    if(nodeID==4)
                        quantityT.setText(answer);                
            }
            if(category.equals("Drug"))
               {
                    drug.setText("Yes");
                    if(nodeID==2)
                        typeD.setText(answer);
                    if(nodeID==3)
                        durationD.setText(answer);             
            }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneralMedicalPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneralMedicalPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneralMedicalPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneralMedicalPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneralMedicalPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton New;
    private javax.swing.JButton Save;
    private javax.swing.JTextField alcohol;
    private javax.swing.JTextField answers;
    private javax.swing.JTextField bloodType;
    private javax.swing.JButton close;
    private javax.swing.JButton delete;
    private javax.swing.JTextField drug;
    private javax.swing.JTextField durationA;
    private javax.swing.JTextField durationD;
    private javax.swing.JTextField durationT;
    private javax.swing.JButton edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JComboBox<String> list;
    private javax.swing.JTextField maritalStatus;
    private javax.swing.JTextField quantityA;
    private javax.swing.JTextField quantityT;
    private javax.swing.JTextField questions;
    private javax.swing.JTextField rh;
    private javax.swing.JButton start;
    private javax.swing.JButton submit;
    private javax.swing.JTextField tobacco;
    private javax.swing.JTextField typeA;
    private javax.swing.JTextField typeD;
    private javax.swing.JTextField typeT;
    // End of variables declaration//GEN-END:variables
}
